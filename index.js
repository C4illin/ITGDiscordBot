/*jshint esversion: 6 */
const Discord = require("discord.js");
const fs = require("fs");
const date = require("date");
const YTDL = require("ytdl-core");
const Chance = require('chance');
const bot = new Discord.Client();
const prefix = "!";
const botToken = require("./bottoken"); //Byt ut detta till "<din_bottoken>";

function play(connection, message) {
    var server =servers[message.guild.id];

    server.dispatcher = connection.playStream(YTDL(server.queue[0], {filter: "audioonly"}));

    server.queue.shift();

    server.dispatcher.on("end", function() {
        if (server.queue[0]) play(connection, message);
        else connection.disconnect();
    });
}

var chance = new Chance();

bot.on("ready", () => {
    bot.user.setActivity("Skriv !help f칬r hj칛lp");
    console.log("Klar");
});

var hurExempel = require('./hurExempel');

var klasslista = require('./klasslista');

var servers = {};

var borde = [
    "Ja",
    "Ja",
    "Ja",
    "Nej",
    "Nej",
    "Nej",
    "Kanske"
];

var dabRespond = [
    "Du kan inte tvinga mig",
    "Du kan inte tvinga mig",
    "Du kan inte tvinga mig",
    "Du kan inte tvinga mig",
    "Du kan inte tvinga mig",
    "Du kan inte tvinga mig",
    "Vad 칛r det du inte f칬rst친r?",
    "J칛vla m칛nniskor ska alltid komma och tjata",
    "Okej d친, ***DAB***"
];



var inCash;
var betWinner;
var betWinnerCall;
var bet;
var betStarterId;
var betStarter;
var betLoserCall;
var betLoser;
var betExist = false;
var skott;
var pistolLaddad = false;
var widthSchema = "600";
var heightSchema = "600";

bot.on("message", (message) => {
    //console.log(message.Embed.image)
    if (message.channel.id == "354703852437766157")  {
        if (message.content.startsWith("http") || message.attachments.size != "0"){
            message.react("游녨");
            setTimeout(function(){
                message.react("游녩");
            }, 500);
        }     
    }
    if (!message.content.startsWith(prefix)) return;
    if (message.author.bot) return;
    
    //console.log(test);
    
    var split = message.content.substring(prefix.length).split(' ');
    
    switch (split[0].toLowerCase()) {
        case "h":
        case "help":
            message.channel.send({
                embed: new Discord.RichEmbed()
                    .setAuthor("Kommandon:", bot.user.avatarURL)
                    .addField("Allm칛na kommandon:", "!help - visar denna meny\n!dab - sprid cancer\n!poll <fr친ga> - Starta en ja eller nej fr친ga\n!pinpoll - samma som !poll fast den pinnar ocks친\n!borde - l친t boten svara p친 livets sv친ra fr친gor\n!ryss - spela rysk roulette\n!nummer <nummer1>-<nummer2> - ger dig ett slumpm칛ssigt nummer\n!vem <p친st친ende> - l친ter boten v칛lja vem p친st친endet b칛st passar in p친\n!hur - s칛ger hur n친got h칛nde\n!tid - ger en slumpm칛ssig tid")
                    .addField("Skolrelaterade kommandon:", "!schema - visar veckans schema\n!schemavecka <vecka> - visar schemat fr친n en viss vecka\n!vecka - visar veckan\n!wikipedia <sida> - l친ter dig g친 till en viss Wikipedia hemsida\n!wikise <sida> - l친ter dig g친 till en svenska Wikipedia sida\n!wikis칬k <s칬k> - s칬ker p친 Wikipedia\n!google <s칬k> - s칬ker p친 google")
                    .addField("Discord kommandon:", "!hex - ger dig en slumpm칛ssig f칛rg\n!hexdisplay <hex> - visar f칛gen som det inskrivna hex nummret ger\n!github - skickar l칛nken till botens github repo\n!ping - visar botens internal ping (f칬r fels칬kning)\n!getid - visar ditt user id\n!info - visar info om servern")
                    .setColor("0x111111")
            });
            message.channel.send({
                embed: new Discord.RichEmbed()
                    .addField("Ekonomi kommandon:", "!pl친nbok - skapar en personlig pl친nbok 친t dig\n!saldo - visar ditt saldo\n!bet <amount> - flipa en slant med n친gon och se vem som vinner pengarna\n!resetpl친nbok - resetar din pl친nbok")
                    .addField("Musik kommandon:", "!play <url> - spelar en youtube url\n!skip - skippar l친ten som spelas nu\n!stop - stoppar musiken helt\n!theend - spelar upp ett visst tal")
                    .setColor("0x111111")
            });
            break;
        case "hur":
            message.channel.send("Av "+hurExempel[Math.floor(Math.random() * hurExempel.length)]);
            break;
        case "saldo":
            var saldo;
            fs.readFile("wallets/"+message.author.id+".txt", function read(err, data) {
                if (err) {
                    message.channel.send("```Du m친ste skapa en pl친nbok f칬rst\nSkriv !pl친nbok f칬r att skapa en```");
                    return;
                }
                saldo = data;
                processFile();
            });
            
            function processFile() {
                message.channel.send(message.author.toString()+" Ditt saldo 칛r: "+saldo);
            }
            break;
        case "resetpl친nbok":
            fs.stat("wallets/"+message.author.id+".txt", function(err, stat) {
                if(err == null) {
                    var wstream = fs.createWriteStream("wallets/"+message.author.id+".txt");
                    wstream.write("10");
                    message.channel.send("Din pl친nbok 칛r resetad");
                    return;
                } else if(err.code == 'ENOENT') {
                    message.channel.send("Du har ingen pl친nbok, skriv !pl친nbok f칬r att skapa en");
                } else {
                    console.log("Some other error: ", err.code);
                }
            });
            break;
        case "removebet":
            betExist = false;
            message.channel.send("betet 칛r nu borttaget");
            break;
        case "bet":
            fs.readFile("wallets/"+message.author.id+".txt", function read(err, data) {
                if (err) {
                    message.channel.send("```Du m친ste skapa en pl친nbok f칬rst\nSkriv !pl친nbok f칬r att skapa en```");
                    return;
                }
                inCash = parseInt(data) + 1;
                betMain();
            });
            function betMain() {
                if (betExist === false) {
                    betStarter = message.author.toString();
                    betStarterId = message.author.id;
                    bet = message.content.substring(5);
                    if (parseInt(inCash) <= parseInt(bet)) {
                        message.channel.send(message.author.toString()+" Du kan inte betta mer 칛n du har");
                        return;
                    }
                    if (bet == parseInt(bet, 10)) {
                        if (parseInt(bet) < 0) {
                            message.channel.send("Du kan inte betta negativ nummer");
                            return;
                        }
                        message.channel.send(betStarter+" bettar "+bet+"\nSkriv !bet f칬r att betta emot");
                        betExist = true;
                        return;
                    }
                    message.channel.send("Jag tror inte "+bet+" 칛r ett nummer.");
                    return;
                }
                
                else {
                    if (message.author.id === betStarterId) {
                        message.channel.send("Du kan inte betta mot dig sj칛lv");
                        return;
                    }
                    if (parseInt(inCash) <= parseInt(bet)) {
                        message.channel.send(message.author.toString()+" Du kan inte betta mer 칛n du har");
                        return;
                    }
                    message.channel.send(betStarter+" och "+message.author.toString()+" bettar om "+bet);
                    betWinner = Math.random() < 0.5 ? betStarterId : message.author.id;
                    if (betWinner === betStarterId) {
                        betWinnerCall = betStarter;
                        betLoser = message.author.id;
                        betLoserCall = message.author.toString();
                    }
                    else {
                        betWinnerCall = message.author.toString();
                        betLoser = betStarterId;
                        betLoserCall = betStarter;
                    }
                    message.channel.send(betWinnerCall+ " Vann betet p친 "+bet);
                    var vinnarensSaldo;
                    var loserSaldo;

                    fs.readFile("wallets/"+betWinner+".txt", function read(err, data) {
                        if (err) {
                            message.channel.send("```Du m친ste skapa en pl친nbok f칬rst\nSkriv !pl친nbok f칬r att skapa en```");
                            return;
                        }
                        vinnarensSaldo = parseInt(data)  +  parseInt(bet);
                        fs.writeFileSync("wallets/"+betWinner+".txt", vinnarensSaldo);
                        message.channel.send(betWinnerCall+" Ditt saldo 칛r nu: "+vinnarensSaldo);
                        betExist = false;
                    });
                    fs.readFile("wallets/"+betLoser+".txt", function read(err, data) {
                        if (err) {
                            message.channel.send("```Du m친ste skapa en pl친nbok f칬rst\nSkriv !pl친nbok f칬r att skapa en```");
                            return;
                        }
                        loserSaldo = parseInt(data)  -  parseInt(bet);
                        message.channel.send(betLoserCall+" Ditt saldo 칛r nu: "+loserSaldo);
                        fs.writeFileSync("wallets/"+betLoser+".txt", loserSaldo);
                    });
                }  
            }
            break;
        case "pl친nbok":
            fs.stat("wallets/"+message.author.id+".txt", function(err, stat) {
                if(err == null) {
                    message.channel.send("Du har redan en pl친nbok!");
                } else if(err.code == 'ENOENT') {
                    var wstream = fs.createWriteStream("wallets/"+message.author.id+".txt");
                    wstream.write("100");
                    message.channel.send("Du har nu en pl친nbok");
                    return;
                } else {
                    console.log("Some other error: ", err.code);
                }
            });
            break;
        case "vecka":
            Date.prototype.getWeek = function() {
                var onejan = new Date(this.getFullYear(), 0, 1);
                return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);
            };
            var weekNumber = (new Date()).getWeek();
            message.channel.send(weekNumber);
            break;
        case "play":
            if (message.content.substring(5) === "") {
                message.channel.send("Gl칬m inte bort att skicka en l칛nk ocks친");
                return;
            }

            if (!message.member.voiceChannel) {
                message.channel.send("Du m친ste vara i en voicechannel f칬rst");
                return;
            }

            if(!servers[message.guild.id]) servers[message.guild.id] = {
                queue: []
            };

            var server = servers[message.guild.id];

            server.queue.push(message.content.substring(6));

            if (!message.guild.voiceConnection) message.member.voiceChannel.join().then(function(connection) {
                play(connection, message);
            });
            break;
        case "skip":
            var server = servers[message.guild.id];

            if (server.dispatcher) server.dispatcher.end();
            break;
        case "theend":
            if (!message.member.voiceChannel) {
                message.channel.send("Du m친ste vara i en voicechannel f칬rst");
                return;
            }
            if(!servers[message.guild.id]) servers[message.guild.id] = {
                queue: []
            };
            var server = servers[message.guild.id];
            server.queue.push("https://youtu.be/pdRH5wzCQQw");
                if (!message.guild.voiceConnection) message.member.voiceChannel.join().then(function(connection) {
                    play(connection, message);
                });
            break;
        case "stop":
            var server = servers[message.guild.id];
            if (message.guild.voiceConnection)
                {
                    for (var i = server.queue.length - 1; i >= 0; i--) 
                    {
                        server.queue.splice(i, 1);
                }
                    server.dispatcher.end();
                    console.log("[" + new Date().toLocaleString() + "] Stopped the queue.");
                }
                break;
        case "s":
        case "schema":
            Date.prototype.getWeek = function() {
                var onejan = new Date(this.getFullYear(), 0, 1);
                return Math.ceil((((this - onejan) / 86400000) + onejan.getDay() + 1) / 7);
            };
            var weekNumber = (new Date()).getWeek();
            if (message.content.charAt(4) === "e") {
                var valfriVecka = message.content.substring(8);
            }
            else {
                var valfriVecka = message.content.substring(3);
            }

            if (valfriVecka === "") {
                valfriVecka = weekNumber;
            }
            
            message.channel.send({
                embed: new Discord.RichEmbed()
                    .setAuthor("Schema v."+valfriVecka+":")
                    .setImage("http://www.novasoftware.se/ImgGen/schedulegenerator.aspx?format=png&schoolid=80220/sv-se&type=1&id={EA17E85E-CBFC-4836-935C-04780337F6D5}&period=&week="+valfriVecka+
                    "&mode=0&printer=0&colors=32&head=0&clock=0&foot=0&day=0&width="+widthSchema+"&height="+heightSchema+"&maxwidth=1883&maxheight=847")
                    .setColor("0x"+("000000"+Math.random().toString(16).slice(2, 8).toUpperCase()).slice(-6))
            });
            break;
        case "github":
            message.author.send("https://github.com/ChilladeChillin/ITGDiscordBot");
            break;
        case "gr":
            message.delete(0);
            var rad = message.content.substring(4);
            message.channel.send("https://github.com/ChilladeChillin/ITGDiscordBot/blob/master/index.js#L"+rad);
            break;
        case "dab":
            message.channel.send(dabRespond[Math.floor(Math.random() * dabRespond.length)]);
            break;
        case "s칛g":
        case "say":
            var textFromSender = message.content;
            message.delete(0);
            if (message.author.id==="164283691802165250") {
                message.channel.send(message.content.substring(5));
            }
            else {
                message.author.send("Du har inte till친telse att anv칛nda detta kommando");
            }
            break;
        case "ping":
            message.channel.send(bot.ping+" ms");
            break;
        case "hex":
            var randomhex = ("000000"+Math.random().toString(16).slice(2, 8).toUpperCase()).slice(-6);
            message.channel.send({
                embed: new Discord.RichEmbed()
                    .setAuthor("Hex:")
                    .setDescription("#"+randomhex)
                    .setColor("0x"+randomhex)
            });
            break;
        case "poll":
            var question = message.content.substring(6);
            message.delete(0);
            message.channel.send(question+"\n\n`游녨=JA 游녩=NEJ`")
                .then(function (message) {
                    message.react("游녨");
                    setTimeout(function(){
                        message.react("游녩");
                    }, 500);
                }).catch(function() {
                    console.log("Reaktionen gick inte hela v칛gen fram");
                });
            break;
        case "pollpin":
        case "pinpoll":
            var question = message.content.substring(9);
            message.delete(0);
            message.channel.send(question+"\n\n`游녨=JA 游녩=NEJ`")
                .then(function (message) {
                    message.react("游녨");
                    message.pin();
                    setTimeout(function(){
                        message.react("游녩");
                    }, 500);
                }).catch(function() {
                    console.log("Reaktionen gick inte hela v칛gen fram (pinpoll)");
                });
            break;
        case "hd":
        case "hexdisplay":
            var hexMessage;
            if (message.content.charAt(4) === "d") {
                var hexMessage = message.content.substring(12);
            }
            else {
                var hexMessage = message.content.substring(4);
            }
            if (hexMessage.charAt(0) === "#") {
                var hexMessageFix = hexMessage.substring(1);
            }
            else {
                var hexMessageFix = hexMessage;
            }
            message.channel.send({
                embed: new Discord.RichEmbed()
                    .setAuthor("Hex:")
                    .setDescription("#"+hexMessageFix)
                    .setColor("0x"+hexMessageFix)
            });
            break;
        case "getid":
            message.channel.send(message.author.id);
            break;
        case "getchannelid":
            message.channel.send(message.channel.id);
            break;
        case "itg,":
        case "itg":
        case "har":
        case "ska":
        case "gillar":
        case "vet":
        case "hade":
        case "skulle":
        case "kommer":
        case "칛r":
        case "borde":
            message.channel.send(borde[Math.floor(Math.random()*borde.length)]+" "+message.author.toString());
            break;
        case "ryss":
            if (pistolLaddad === false) {
                message.channel.send("Laddar Pistolen");
                pistolLaddad = true;
                skott = Math.floor((Math.random() * 6) + 1);
            }
            else {
                if (skott === 1) {
                    message.channel.send("Du dog "+message.author.toString());
                    pistolLaddad = false;
                }
                else {
                    message.channel.send("Du 칬verlevde "+message.author.toString());
                    skott -= 1;
                }
            }
            break;
        case "lmgtfy":
            var wikiSearch = message.content.substring(8).replace(/ /g,"+");
            message.channel.send("http://lmgtfy.com/?q="+wikiSearch);
            break;
        case "wikipedia":
            var wikiSearch = message.content.substring(11).replace(/ /g,"_");
            message.channel.send("https://en.wikipedia.org/wiki/"+wikiSearch);
            break;
        case "wikise":
            var wikiSearch = message.content.substring(8).replace(/ /g,"_");
            message.channel.send("https://sv.wikipedia.org/wiki/"+wikiSearch);
            break;
        case "wikis칬k":
            var wikiSearch = message.content.substring(9).replace(/ /g,"+");
            message.channel.send("https://en.wikipedia.org/w/index.php?search="+wikiSearch);
            break;
        case "google":
            var googleSearch = message.content.substring(8).replace(/ /g,"+");
            message.channel.send("https://www.google.se/search?q="+googleSearch);
            break;
        case "info":
            function fixSwedish(i) {
                if(i < 3) {
                return ":a";
                }else {
                return ":e";
                }
            }
            function timeConverter(UNIX_timestamp) {
                var a = new Date(UNIX_timestamp);
                var months = ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'];
                var year = a.getFullYear();
                var month = months[a.getMonth()];
                var date = a.getDate();
                var hour = a.getHours();
                var min = a.getMinutes();
                var time = date + fixSwedish(date) + ' ' + month + ' ' + year + ' klockan ' + hour + ':' + min;
                return time;
            }
            message.author.send({
            embed: new Discord.RichEmbed()
                .addField("Serverinformation:", "Antal medlemmar: " + message.guild.memberCount + "\nDu gick med den " + timeConverter(message.guild.joinedTimestamp) + "\nServerns admin 칛r: " + message.guild.owner)
                .setThumbnail(message.guild.iconURL)
                .setColor("0x111111")
            });
            break;
        case "tid":
            message.channel.send(chance.date({string: true, american: false})+" Klockan "+chance.hour()+":"+chance.minute());
            break;
        case "nummer":
            var meddelandetsContent = message.content.substring(8);
            var mittenStreck = meddelandetsContent.indexOf("-");
            var f칬rstaTalet = meddelandetsContent.substring(0, mittenStreck);
            var andraTalet = meddelandetsContent.substring(mittenStreck+1);
            message.channel.send(Math.floor(Math.random() * parseInt(andraTalet) + parseInt(f칬rstaTalet)));
            break;
        case "cc":
            var creditType;
            if (message.content.substring(3, 4) === " ") {
                creditType = "{type: '"+message.content.substring(4)+"'}";
            }
            message.channel.send(chance.cc());
            break;
        case "vem":
            if (message.channel.type === "text") {
                var statement = message.content.substring(5);
                if (statement.endsWith("?")) {
                    var statement = message.content.substring(5).replace("?", ".");
                }
                message.channel.send(message.guild.members.random().toString()+" "+statement);
            }
            break;
        case "vemalla":
            var statement = message.content.substring(9);
            if (statement.endsWith("?")) {
                var statement = message.content.substring(9).replace("?", ".");
            }
            message.channel.send(klasslista[Math.floor(Math.random()*klasslista.length)]+" "+statement);
            break;
        /*case "test":
            var meddelandet = chance.currency();
            message.channel.send("H칛r: "+JSON.stringify(meddelandet));
            break;*/
        default:
            message.channel.send("```Detta kommando existerar inte (칛n)\nSkriv !help f칬r att se de kommandon som faktiskt existerar```");
    }
});

bot.login(botToken);